{"version":3,"sources":["../src/server.js"],"names":["App","sameSite","process","argv","PORT","env","LOCAL_PORT","use","disable","bodyParser","urlencoded","extended","json","connect","useNewUrlParser","useFindAndModify","useCreateIndex","useUnifiedTopology","connection","once","console","log","name","get","req","res","status","cookie","locals","sessionID","msg","Router","listen"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAMC,QAAQ,GAAGC,OAAO,CAACC,IAAR,CAAa,CAAb,KAAmB,IAApC;AACA,IAAMC,IAAI,GAAGF,OAAO,CAACG,GAAR,CAAYD,IAAZ,IAAoBF,OAAO,CAACG,GAAR,CAAYC,UAA7C;AAEAN,GAAG,CAACO,GAAJ,CAAQ,yBAAR;AACAP,GAAG,CAACQ,OAAJ,CAAY,cAAZ;AACAR,GAAG,CAACO,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AACAP,GAAG,CAACO,GAAJ,CAAQ,+BAAR;AACAP,GAAG,CAACO,GAAJ,CAAQ,uBAAR;AACAP,GAAG,CAACO,GAAJ,CAAQE,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAX,GAAG,CAACO,GAAJ,CAAQE,uBAAWG,IAAX,EAAR,E,CACA;AACA;;AACA,uBAAQ,mBAAKC,OAAb,EAAsB;AACpBC,EAAAA,eAAe,EAAE,IADG;AAEpBC,EAAAA,gBAAgB,EAAE,KAFE;AAGpBC,EAAAA,cAAc,EAAE,IAHI;AAIpBC,EAAAA,kBAAkB,EAAE;AAJA,CAAtB;;AAMAC,qBAAWC,IAAX,CAAgB,MAAhB,EAAwB,YAAM;AAC5BC,EAAAA,OAAO,CAACC,GAAR,wBAA4B,mBAAKC,IAAjC;AACD,CAFD,E,CAGA;;;AACAtB,GAAG,CAACuB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,SACXA,GAAG,CACAC,MADH,CACU,GADV,EAEGC,MAFH,CAEU,WAFV,EAEuB3B,GAAG,CAAC4B,MAAJ,CAAWC,SAFlC,EAE6C;AAAE5B,IAAAA,QAAQ,EAAEA;AAAZ,GAF7C,EAGGW,IAHH,CAGQ;AAAEkB,IAAAA,GAAG,EAAE;AAAP,GAHR,CADW;AAAA,CAAb;AAMA9B,GAAG,CAACO,GAAJ,CAAQ,MAAR,EAAgBwB,kBAAhB;AAEA/B,GAAG,CAACgC,MAAJ,CAAW5B,IAAX;eAEeJ,G","sourcesContent":["import 'dotenv/config'\nimport express from 'express'\nimport { connect, connection } from 'mongoose'\nimport bodyParser from 'body-parser'\nimport helmet from 'helmet'\nimport cookieParser from 'cookie-parser'\nimport logger from 'morgan'\nimport cors from 'cors'\nimport { db } from './config'\nimport Router from './routes'\nimport { genID } from './services'\n\nconst App = express()\nconst sameSite = process.argv[2] || true\nconst PORT = process.env.PORT || process.env.LOCAL_PORT\n\nApp.use(helmet())\nApp.disable('x-powered-by')\nApp.use(logger('dev'))\nApp.use(cookieParser())\nApp.use(cors())\nApp.use(bodyParser.urlencoded({ extended: true }))\nApp.use(bodyParser.json())\n// App.locals.sessionID = genID()\n// Mongodb Connection\nconnect(db().connect, {\n  useNewUrlParser: true,\n  useFindAndModify: false,\n  useCreateIndex: true,\n  useUnifiedTopology: true\n})\nconnection.once('open', () => {\n  console.log(`connected to ${db().name}`)\n})\n// Mongodb Connection\nApp.get('/', (req, res) =>\n  res\n    .status(200)\n    .cookie('sessionID', App.locals.sessionID, { sameSite: sameSite })\n    .json({ msg: 'Portfolio' })\n)\nApp.use('/api', Router)\n\nApp.listen(PORT)\n\nexport default App\n"],"file":"server.js"}