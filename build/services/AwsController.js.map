{"version":3,"sources":["../../src/services/AwsController.js"],"names":["AwsHelpers","generateSubFolder","bind","dataParser","getKeys","setParams","title","split","join","toLowerCase","data","JSON","parse","existingFiles","i","length","Key","includes","push","params","ACL","Bucket","process","env","AWS_BUCKET","Body","file","buffer","AwsController","req","res","next","project","Helpers","body","subFolder","files","map","s3","listObjects","Prefix","err","returnedKeys","Contents","forEach","deleteFile","upload","Location","locals","console","log","deleteObject","awsSdk","S3","date","Date","getTime","pushKeys","config","update","accessKeyId","AWS_KEY","secretAccessKey","AWS_SECRET","region"],"mappings":"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","sourcesContent":["import 'dotenv/config'\nimport awsSdk from 'aws-sdk'\n\nclass AwsHelpers {\n  constructor() {\n    this.generateSubFolder = this.generateSubFolder.bind(this)\n    this.dataParser = this.dataParser.bind(this)\n    this.getKeys = this.getKeys.bind(this)\n    this.setParams = this.setParams.bind(this)\n  }\n  generateSubFolder(title) {\n    return title\n      .split(' ')\n      .join('-')\n      .toLowerCase()\n  }\n  dataParser(data) {\n    return JSON.parse(data)\n  }\n\n  getKeys(data) {\n    let existingFiles = []\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].Key.includes('project')) {\n        existingFiles.push(data[i].Key)\n      }\n    }\n    return existingFiles\n  }\n\n  setParams(data) {\n    let params = {\n      ACL: 'public-read',\n      Bucket: process.env.AWS_BUCKET,\n      Body: data.file.buffer,\n      Key: `project/${this.generateSubFolder(data.file)}`\n    }\n    return params\n  }\n}\nclass AwsController {\n  constructor() {\n    this.files = []\n    this.file = null\n    this.s3 = new awsSdk.S3()\n    this.Helpers = new AwsHelpers()\n    this.date = new Date().getTime()\n    this.pushKeys = this.Helpers.getKeys\n    this.deleteFile = this.deleteFile.bind(this)\n    this.params = null\n    this.s3.config.update({\n      accessKeyId: process.env.AWS_KEY,\n      secretAccessKey: process.env.AWS_SECRET,\n      region: 'us-east-1'\n    })\n  }\n\n  upload = (req, res, next) => {\n    const project = this.Helpers.dataParser(req.body.project)\n    const subFolder = this.Helpers.generateSubFolder(project.title)\n    if (req.files.length) {\n      req.files.map(file => {\n        this.file = file\n        let existingFiles = []\n        this.s3.listObjects(\n          {\n            Bucket: process.env.AWS_BUCKET,\n            Prefix: `project/${subFolder}`\n          },\n          (err, data) => {\n            if (err) throw err\n            else {\n              const returnedKeys = this.Helpers.getKeys(data.Contents)\n              existingFiles = [...existingFiles, ...returnedKeys]\n              if (existingFiles.files.includes(this.params)) {\n                existingFiles.forEach(file => this.deleteFile(null, res, file))\n              } else {\n                this.s3.upload(\n                  this.Helpers.setParams({ file: this.file }),\n                  (err, data) => {\n                    if (err) throw err\n                    else if (data) {\n                      this.files.push(data.Location)\n                      if (this.files.length === req.files.length) {\n                        res.locals.files = this.files\n                        next()\n                      }\n                    }\n                  }\n                )\n              }\n            }\n          }\n        )\n      })\n    } else {\n      console.log('made it')\n      next()\n    }\n  }\n  deleteFile = (req, res, file) => {\n    this.params = this.Helpers.setParams({ file })\n    this.s3.deleteObject(this.params, (err, data) => {\n      if (err) console.log(err)\n      else {\n        console.log(data)\n      }\n    })\n  }\n}\n\nexport { AwsController }\n"],"file":"AwsController.js"}